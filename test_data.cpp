
#include <vector>

#include "test_data.h"

const Data &GetHomeData()
{
	static Data *data = 0;
	if (!data) {
		static const std::vector<double> raw = {
			399900.0 , 2104.0 , 3.0 , 
			329900.0 , 1600.0 , 3.0 , 
			369000.0 , 2400.0 , 3.0 , 
			232000.0 , 1416.0 , 2.0 , 
			539900.0 , 3000.0 , 4.0 , 
			299900.0 , 1985.0 , 4.0 , 
			314900.0 , 1534.0 , 3.0 , 
			198999.0 , 1427.0 , 3.0 , 
			212000.0 , 1380.0 , 3.0 , 
			242500.0 , 1494.0 , 3.0 , 
			239999.0 , 1940.0 , 4.0 , 
			347000.0 , 2000.0 , 3.0 , 
			329999.0 , 1890.0 , 3.0 , 
			699900.0 , 4478.0 , 5.0 , 
			259900.0 , 1268.0 , 3.0 , 
			449900.0 , 2300.0 , 4.0 , 
			299900.0 , 1320.0 , 2.0 , 
			199900.0 , 1236.0 , 3.0 , 
			499998.0 , 2609.0 , 4.0 , 
			599000.0 , 3031.0 , 4.0 , 
			252900.0 , 1767.0 , 3.0 , 
			255000.0 , 1888.0 , 2.0 , 
			242900.0 , 1604.0 , 3.0 , 
			259900.0 , 1962.0 , 4.0 , 
			573900.0 , 3890.0 , 3.0 , 
			249900.0 , 1100.0 , 3.0 , 
			464500.0 , 1458.0 , 3.0 , 
			469000.0 , 2526.0 , 3.0 , 
			475000.0 , 2200.0 , 3.0 , 
			299900.0 , 2637.0 , 3.0 , 
			349900.0 , 1839.0 , 2.0 , 
			169900.0 , 1000.0 , 1.0 , 
			314900.0 , 2040.0 , 4.0 , 
			579900.0 , 3137.0 , 3.0 , 
			285900.0 , 1811.0 , 4.0 , 
			249900.0 , 1437.0 , 3.0 , 
			229900.0 , 1239.0 , 3.0 , 
			345000.0 , 2132.0 , 4.0 , 
			549000.0 , 4215.0 , 4.0 , 
			287000.0 , 2162.0 , 4.0 , 
			368500.0 , 1664.0 , 2.0 , 
			329900.0 , 2238.0 , 3.0 , 
			314000.0 , 2567.0 , 4.0 , 
			299000.0 , 1200.0 , 3.0 , 
			179900.0 , 852.0  , 2.0 , 
			299900.0 , 1852.0 , 4.0 , 
			239500.0 , 1203.0 , 3.0 , 
		};
		data = new Data(raw.size() / 3, 2);
		for (size_t i = 0; i < raw.size() / 3; i += 3) {
			data->y << raw[i];
			data->x << raw[i+1], raw[i+2];
		}
	}
	return *data;
}

const Data &GetFoodData()
{
	static Data *data = 0;
	if (!data) {
		static const std::vector<double> raw = {
			17.592   , 6.1101 , 
			9.1302   , 5.5277 , 
			13.662   , 8.5186 , 
			11.854   , 7.0032 , 
			6.8233   , 5.8598 , 
			11.886   , 8.3829 , 
			4.3483   , 7.4764 , 
			12       , 8.5781 , 
			6.5987   , 6.4862 , 
			3.8166   , 5.0546 , 
			3.2522   , 5.7107 , 
			15.505   , 14.164 , 
			3.1551   , 5.734  , 
			7.2258   , 8.4084 , 
			0.71618  , 5.6407 , 
			3.5129   , 5.3794 , 
			5.3048   , 6.3654 , 
			0.56077  , 5.1301 , 
			3.6518   , 6.4296 , 
			5.3893   , 7.0708 , 
			3.1386   , 6.1891 , 
			21.767   , 20.27  , 
			4.263    , 5.4901 , 
			5.1875   , 6.3261 , 
			3.0825   , 5.5649 , 
			22.638   , 18.945 , 
			13.501   , 12.828 , 
			7.0467   , 10.957 , 
			14.692   , 13.176 , 
			24.147   , 22.203 , 
			-1.22    , 5.2524 , 
			5.9966   , 6.5894 , 
			12.134   , 9.2482 , 
			1.8495   , 5.8918 , 
			6.5426   , 8.2111 , 
			4.5623   , 7.9334 , 
			4.1164   , 8.0959 , 
			3.3928   , 5.6063 , 
			10.117   , 12.836 , 
			5.4974   , 6.3534 , 
			0.55657  , 5.4069 , 
			3.9115   , 6.8825 , 
			5.3854   , 11.708 , 
			2.4406   , 5.7737 , 
			6.7318   , 7.8247 , 
			1.0463   , 7.0931 , 
			5.1337   , 5.0702 , 
			1.844    , 5.8014 , 
			8.0043   , 11.7   , 
			1.0179   , 5.5416 , 
			6.7504   , 7.5402 , 
			1.8396   , 5.3077 , 
			4.2885   , 7.4239 , 
			4.9981   , 7.6031 , 
			1.4233   , 6.3328 , 
			-1.4211  , 6.3589 , 
			2.4756   , 6.2742 , 
			4.6042   , 5.6397 , 
			3.9624   , 9.3102 , 
			5.4141   , 9.4536 , 
			5.1694   , 8.8254 , 
			-0.74279 , 5.1793 , 
			17.929   , 21.279 , 
			12.054   , 14.908 , 
			17.054   , 18.959 , 
			4.8852   , 7.2182 , 
			5.7442   , 8.2951 , 
			7.7754   , 10.236 , 
			1.0173   , 5.4994 , 
			20.992   , 20.341 , 
			6.6799   , 10.136 , 
			4.0259   , 7.3345 , 
			1.2784   , 6.0062 , 
			3.3411   , 7.2259 , 
			-2.6807  , 5.0269 , 
			0.29678  , 6.5479 , 
			3.8845   , 7.5386 , 
			5.7014   , 5.0365 , 
			6.7526   , 10.274 , 
			2.0576   , 5.1077 , 
			0.47953  , 5.7292 , 
			0.20421  , 5.1884 , 
			0.67861  , 6.3557 , 
			7.5435   , 9.7687 , 
			5.3436   , 6.5159 , 
			4.2415   , 8.5172 , 
			6.7981   , 9.1802 , 
			0.92695  , 6.002  , 
			0.152    , 5.5204 , 
			2.8214   , 5.0594 , 
			1.8451   , 5.7077 , 
			4.2959   , 7.6366 , 
			7.2029   , 5.8707 , 
			1.9869   , 5.3054 , 
			0.14454  , 8.2934 , 
			9.0551   , 13.394 , 
			0.61705  , 5.4369 , 
		};
		size_t sz = raw.size() / 2;
		data = new Data(sz, 1);
		for (size_t i = 0, r = 0; r < sz; r++, i += 2) {
			data->y(r, 0) = raw[i];
			data->x(r, 0) = raw[i+1];
		}
	}
	return *data;
}

MemoryDataSet GetFoodDataSet() {
	const Data &data = GetFoodData();

	size_t m = data.x.rows();
	size_t n = data.x.cols() + 1;

	mat x = mat(m, n);
	vec y = data.y;
	vec theta = vec::Zero(n);

	x.col(0).setOnes();
	x.rightCols(n - 1) = data.x;

	MemoryDataSet dataset(x, y);
	return dataset;
}

